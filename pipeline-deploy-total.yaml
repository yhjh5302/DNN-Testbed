apiVersion: apps/v1
kind: Deployment
metadata:
  name: data-generator
  labels:
    app: data-generator
spec:
  selector:
    matchLabels:
      app: data-generator
  template:
    metadata:
      labels:
        app: data-generator
    spec:
      nodeSelector:
        kubernetes.io/hostname: wnlab-laptop-1
      containers:
      - name: data-generator
        #image: yhjh5302/data-uploader:latest
        image: yhjh5302/total:latest
        env:
        - name: DEVICE_ADDR
          value: "10.96.0.200 10.96.0.201 10.96.0.202 10.96.0.203 10.96.0.204 10.96.0.205"
        - name: SEND_PORT
          value: "30000 30001 30002 30003 30004 30005"
        - name: RESV_PORT
          value: "30010 30011 30012 30013 30014 30015"
        - name: PART_LOCATION
          value:  "2 2 2 2 1 1 5 3 4 5 5 5 5 5 5 5 2"
        command: ["/bin/bash","-c","while true; do sleep 1000; done"]
        # command: ["/bin/bash","-c","python3 data_uploader.py --set_gpu='false' --prev_addr='' --prev_port=30000 --next_addr='10.96.0.201' --next_port=30001"]
        # command: ["/bin/bash","-c","python3 DataGenerator.py --set_gpu='false' --alexnet_prev_addr='' --alexnet_next_addr='10.96.0.201' --googlenet_prev_addr='' --googlenet_next_addr='10.96.0.211' --mobilenet_prev_addr='' --mobilenet_next_addr='10.96.0.221' --vggnet_prev_addr='' --vggnet_next_addr='10.96.0.231' --vggfnet_prev_addr='' --vggfnet_next_addr='10.96.0.241' --vram_limit=0"]
        ports:
        - containerPort: 30000   # send image
        - containerPort: 30010   # resv image
        - containerPort: 30001   # send image
        - containerPort: 30011   # resv image
        - containerPort: 30002   # send image
        - containerPort: 30012   # resv image
        - containerPort: 30003   # send image
        - containerPort: 30013   # resv image
        - containerPort: 30004   # send image
        - containerPort: 30014   # resv image
        - containerPort: 30005   # send image
        - containerPort: 30015   # resv image
---

apiVersion: v1
kind: Service
metadata:
  name: data-generator-cluster-ip-service
spec:
  clusterIP: 10.96.0.200
  ports:
  - name: send-port-0
    port: 30000
  - name: resv-port-0
    port: 30010
  - name: send-port-1
    port: 30001
  - name: resv-port-1
    port: 30011
  - name: send-port-2
    port: 30002
  - name: resv-port-2
    port: 30012
  - name: send-port-3
    port: 30003
  - name: resv-port-3
    port: 30013
  - name: send-port-4
    port: 30004
  - name: resv-port-4
    port: 30014
  - name: send-port-5
    port: 30005
  - name: resv-port-5
    port: 30015
  selector:
    app: data-generator

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker-laptop-1
  labels:
    app: worker-laptop-1
spec:
  selector:
    matchLabels:
      app: worker-laptop-1
  template:
    metadata:
      labels:
        app: worker-laptop-1
    spec:
      nodeSelector:
        kubernetes.io/hostname: jin-tfx255
      containers:
      - name: worker-laptop-1
        image: yhjh5302/total:latest
        env:
        - name: DEPLOYMENT
          value: "VGG-1 VGG-2"
        - name: DEVICE_ADDR
          value: "10.96.0.200 10.96.0.201 10.96.0.202 10.96.0.203 10.96.0.204 10.96.0.205"
        - name: SEND_PORT
          value: "30000 30001 30002 30003 30004 30005"
        - name: RESV_PORT
          value: "30010 30011 30012 30013 30014 30015"
        - name: PART_LOCATION
          value:  "2 2 2 2 1 1 5 3 4 5 5 5 5 5 5 5 2"
        - name: RESOURCE
          value: "0.5 0.5"
        - name: SSH_PASSWARD
          value: wnlab7752!
        - name: SCP_ADDRESS
          value: wnlab@192.168.1.13
        - name: SCP_PATH
          value: ./
        - name: DEVICE_IDX
          value: "1"
        - name: WORKER_NAME
          value: laptop-1
        
        #resources:
        #  limits:
        #    nvidia.com/gpu: 1
        #command: ["/bin/bash","-c","python3 TotalModel.py --set_gpu='true' --prev_addr='' --prev_port=30001 --next_addr='10.96.0.202' --next_port=30002 --vram_limit=128 --scheduler_addr=$(SCHEDULER_ADDR) --scheduler_port=$(SCHEDULER_PORT) 1> $(LAYERNAME).txt 2> $(LAYERNAME)_err.txt; sshpass -p $(SSH_PASSWARD) scp -o StrictHostKeyChecking=no $(LAYERNAME)*.txt $(SCP_ADDRESS):$(SCP_PATH);"]
        # command: ["/bin/bash","-c","python3 TotalModel.py --set_gpu='true' --deployed_list $(DEPLOYMENT) --device_index=$(DEVICE_IDX) --device_addr_list $(DEVICE_ADDR) --resv_port_list $(RESV_PORT) --send_port_list $(SEND_PORT) --partition_location $(PART_LOCATION) --p $(RESOURCE) 1> $(WORKER_NAME)-1.txt 2> $(WORKER_NAME)-1_err.txt; sshpass -p $(SSH_PASSWARD) scp -o StrictHostKeyChecking=no $(WORKER_NAME)*.txt $(SCP_ADDRESS):$(SCP_PATH);"]
        command: ["/bin/bash","-c","while true; do sleep 1000; done"]

        ports:
        - containerPort: 30000   # send image
        - containerPort: 30010   # resv image
        - containerPort: 30001   # send image
        - containerPort: 30011   # resv image
        - containerPort: 30002   # send image
        - containerPort: 30012   # resv image
        - containerPort: 30003   # send image
        - containerPort: 30013   # resv image
        - containerPort: 30004   # send image
        - containerPort: 30014   # resv image
        - containerPort: 30005   # send image
        - containerPort: 30015   # resv image

---

apiVersion: v1
kind: Service
metadata:
  name: worker-laptop-1-cluster-ip-service
spec:
  clusterIP: 10.96.0.201
  ports:
  - name: send-port-0
    port: 30000
  - name: resv-port-0
    port: 30010
  - name: send-port-1
    port: 30001
  - name: resv-port-1
    port: 30011
  - name: send-port-2
    port: 30002
  - name: resv-port-2
    port: 30012
  - name: send-port-3
    port: 30003
  - name: resv-port-3
    port: 30013
  - name: send-port-4
    port: 30004
  - name: resv-port-4
    port: 30014
  - name: send-port-5
    port: 30005
  - name: resv-port-5
    port: 30015
  selector:
    app: worker-laptop-1

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker-laptop-2
  labels:
    app: worker-laptop-2
spec:
  selector:
    matchLabels:
      app: worker-laptop-2
  template:
    metadata:
      labels:
        app: worker-laptop-2
    spec:
      nodeSelector:
        kubernetes.io/hostname: jin-w65-67sf
      containers:
      - name: worker-laptop-2
        image: yhjh5302/total:latest
        env:
        - name: DEPLOYMENT
          value: "AlexNet-in AlexNet-1 AlexNet-2 AlexNet-out ResNet-CNN_17"
        - name: DEVICE_ADDR
          value: "10.96.0.200 10.96.0.201 10.96.0.202 10.96.0.203 10.96.0.204 10.96.0.205"
        - name: SEND_PORT
          value: "30000 30001 30002 30003 30004 30005"
        - name: RESV_PORT
          value: "30010 30011 30012 30013 30014 30015"
        - name: PART_LOCATION
          value:  "2 2 2 2 1 1 5 3 4 5 5 5 5 5 5 5 2"
        - name: RESOURCE
          value: "0.2 0.2 0.2 0.2 0.2"
        - name: SSH_PASSWARD
          value: wnlab7752!
        - name: SCP_ADDRESS
          value: wnlab@192.168.1.13
        - name: SCP_PATH
          value: ./
        - name: DEVICE_IDX
          value: "2"
        - name: WORKER_NAME
          value: laptop-2
        
        #resources:
        #  limits:
        #    nvidia.com/gpu: 1
        # command: ["/bin/bash","-c","python3 TotalModel.py --set_gpu='true' --prev_addr='' --prev_port=30001 --next_addr='10.96.0.202' --next_port=30002 --vram_limit=128 --scheduler_addr=$(SCHEDULER_ADDR) --scheduler_port=$(SCHEDULER_PORT) 1> $(LAYERNAME).txt 2> $(LAYERNAME)_err.txt; sshpass -p $(SSH_PASSWARD) scp -o StrictHostKeyChecking=no $(LAYERNAME)*.txt $(SCP_ADDRESS):$(SCP_PATH);"]
        # command: ["/bin/bash","-c","python3 TotalModel.py --set_gpu='true' --deployed_list $(DEPLOYMENT) --device_index=$(DEVICE_IDX) --device_addr_list $(DEVICE_ADDR) --resv_port_list $(RESV_PORT) --send_port_list $(SEND_PORT) --partition_location $(PART_LOCATION) --p $(RESOURCE) 1> $(WORKER_NAME).txt 2> $(WORKER_NAME)_err.txt; sshpass -p $(SSH_PASSWARD) scp -o StrictHostKeyChecking=no $(WORKER_NAME)*.txt $(SCP_ADDRESS):$(SCP_PATH);"]
        command: ["/bin/bash","-c","while true; do sleep 1000; done"]

        ports:
        - containerPort: 30000   # send image
        - containerPort: 30010   # resv image
        - containerPort: 30001   # send image
        - containerPort: 30011   # resv image
        - containerPort: 30002   # send image
        - containerPort: 30012   # resv image
        - containerPort: 30003   # send image
        - containerPort: 30013   # resv image
        - containerPort: 30004   # send image
        - containerPort: 30014   # resv image
        - containerPort: 30005   # send image
        - containerPort: 30015   # resv image

---

apiVersion: v1
kind: Service
metadata:
  name: worker-laptop-2-cluster-ip-service
spec:
  clusterIP: 10.96.0.202
  ports:
  - name: send-port-0
    port: 30000
  - name: resv-port-0
    port: 30010
  - name: send-port-1
    port: 30001
  - name: resv-port-1
    port: 30011
  - name: send-port-2
    port: 30002
  - name: resv-port-2
    port: 30012
  - name: send-port-3
    port: 30003
  - name: resv-port-3
    port: 30013
  - name: send-port-4
    port: 30004
  - name: resv-port-4
    port: 30014
  - name: send-port-5
    port: 30005
  - name: resv-port-5
    port: 30015
  selector:
    app: worker-laptop-2

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker-jetson-1
  labels:
    app: worker-jetson-1
spec:
  selector:
    matchLabels:
      app: worker-jetson-1
  template:
    metadata:
      labels:
        app: worker-jetson-1
    spec:
      nodeSelector:
        kubernetes.io/hostname: wnlab-nano-001
      containers:
      - name: worker-jetson-1
        image: yhjh5302/total-nano:latest
        env:
        - name: DEPLOYMENT
          value: "NiN-1"
        - name: DEVICE_ADDR
          value: "10.96.0.200 10.96.0.201 10.96.0.202 10.96.0.203 10.96.0.204 10.96.0.205"
        - name: SEND_PORT
          value: "30000 30001 30002 30003 30004 30005"
        - name: RESV_PORT
          value: "30010 30011 30012 30013 30014 30015"
        - name: PART_LOCATION
          value:  "2 2 2 2 1 1 5 3 4 5 5 5 5 5 5 5 2"          
        - name: RESOURCE
          value: "1."
        - name: SSH_PASSWARD
          value: wnlab7752!
        - name: SCP_ADDRESS
          value: wnlab@192.168.1.13
        - name: SCP_PATH
          value: ./
        - name: DEVICE_IDX
          value: "3"
        - name: WORKER_NAME
          value: jatson-1
        
        #resources:
        #  limits:
        #    nvidia.com/gpu: 1
        #command: ["/bin/bash","-c","python3 TotalModel.py --set_gpu='true' --prev_addr='' --prev_port=30001 --next_addr='10.96.0.202' --next_port=30002 --vram_limit=128 --scheduler_addr=$(SCHEDULER_ADDR) --scheduler_port=$(SCHEDULER_PORT) 1> $(LAYERNAME).txt 2> $(LAYERNAME)_err.txt; sshpass -p $(SSH_PASSWARD) scp -o StrictHostKeyChecking=no $(LAYERNAME)*.txt $(SCP_ADDRESS):$(SCP_PATH);"]
        # command: ["/bin/bash","-c","python3 TotalModel.py --set_gpu='true' --deployed_list $(DEPLOYMENT) --device_index=$(DEVICE_IDX) --device_addr_list $(DEVICE_ADDR) --resv_port_list $(RESV_PORT) --send_port_list $(SEND_PORT) --partition_location $(PART_LOCATION) --p $(RESOURCE) 1> $(WORKER_NAME).txt 2> $(WORKER_NAME)_err.txt; sshpass -p $(SSH_PASSWARD) scp -o StrictHostKeyChecking=no $(WORKER_NAME)*.txt $(SCP_ADDRESS):$(SCP_PATH);"]
        command: ["/bin/bash","-c","while true; do sleep 1000; done"]
        
        ports:
        - containerPort: 30000   # send image
        - containerPort: 30010   # resv image
        - containerPort: 30001   # send image
        - containerPort: 30011   # resv image
        - containerPort: 30002   # send image
        - containerPort: 30012   # resv image
        - containerPort: 30003   # send image
        - containerPort: 30013   # resv image
        - containerPort: 30004   # send image
        - containerPort: 30014   # resv image
        - containerPort: 30005   # send image
        - containerPort: 30015   # resv image

---

apiVersion: v1
kind: Service
metadata:
  name: worker-jetson-1-cluster-ip-service
spec:
  clusterIP: 10.96.0.203
  ports:
  - name: send-port-0
    port: 30000
  - name: resv-port-0
    port: 30010
  - name: send-port-1
    port: 30001
  - name: resv-port-1
    port: 30011
  - name: send-port-2
    port: 30002
  - name: resv-port-2
    port: 30012
  - name: send-port-3
    port: 30003
  - name: resv-port-3
    port: 30013
  - name: send-port-4
    port: 30004
  - name: resv-port-4
    port: 30014
  - name: send-port-5
    port: 30005
  - name: resv-port-5
    port: 30015
  selector:
    app: worker-jetson-1

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker-jetson-2
  labels:
    app: worker-jetson-2
spec:
  selector:
    matchLabels:
      app: worker-jetson-2
  template:
    metadata:
      labels:
        app: worker-jetson-2
    spec:
      nodeSelector:
        kubernetes.io/hostname: wnlab-nano-002
      containers:
      - name: worker-jetson-2
        image: yhjh5302/total-nano:latest
        env:
        - name: DEPLOYMENT
          value: "NiN-2"
        - name: DEVICE_ADDR
          value: "10.96.0.200 10.96.0.201 10.96.0.202 10.96.0.203 10.96.0.204 10.96.0.205"
        - name: SEND_PORT
          value: "30000 30001 30002 30003 30004 30005"
        - name: RESV_PORT
          value: "30010 30011 30012 30013 30014 30015"
        - name: PART_LOCATION
          value:  "2 2 2 2 1 1 5 3 4 5 5 5 5 5 5 5 2"
        - name: RESOURCE
          value: "1."
        - name: SSH_PASSWARD
          value: wnlab7752!
        - name: SCP_ADDRESS
          value: wnlab@192.168.1.13
        - name: SCP_PATH
          value: ./
        - name: DEVICE_IDX
          value: "4"
        - name: WORKER_NAME
          value: jetson-2
        
        #resources:
        #  limits:
        #    nvidia.com/gpu: 1
        #command: ["/bin/bash","-c","python3 TotalModel.py --set_gpu='true' --prev_addr='' --prev_port=30001 --next_addr='10.96.0.202' --next_port=30002 --vram_limit=128 --scheduler_addr=$(SCHEDULER_ADDR) --scheduler_port=$(SCHEDULER_PORT) 1> $(LAYERNAME).txt 2> $(LAYERNAME)_err.txt; sshpass -p $(SSH_PASSWARD) scp -o StrictHostKeyChecking=no $(LAYERNAME)*.txt $(SCP_ADDRESS):$(SCP_PATH);"]
        # command: ["/bin/bash","-c","python3 TotalModel.py --set_gpu='true' --deployed_list $(DEPLOYMENT) --device_index=$(DEVICE_IDX) --device_addr_list $(DEVICE_ADDR) --resv_port_list $(RESV_PORT) --send_port_list $(SEND_PORT) --partition_location $(PART_LOCATION) --p $(RESOURCE) 1> $(WORKER_NAME).txt 2> $(WORKER_NAME)_err.txt; sshpass -p $(SSH_PASSWARD) scp -o StrictHostKeyChecking=no $(WORKER_NAME)*.txt $(SCP_ADDRESS):$(SCP_PATH);"]
        command: ["/bin/bash","-c","while true; do sleep 1000; done"]

        ports:
        - containerPort: 30000   # send image
        - containerPort: 30010   # resv image
        - containerPort: 30001   # send image
        - containerPort: 30011   # resv image
        - containerPort: 30002   # send image
        - containerPort: 30012   # resv image
        - containerPort: 30003   # send image
        - containerPort: 30013   # resv image
        - containerPort: 30004   # send image
        - containerPort: 30014   # resv image
        - containerPort: 30005   # send image
        - containerPort: 30015   # resv image

---

apiVersion: v1
kind: Service
metadata:
  name: worker-jetson-2-cluster-ip-service
spec:
  clusterIP: 10.96.0.204
  ports:
  - name: send-port-0
    port: 30000
  - name: resv-port-0
    port: 30010
  - name: send-port-1
    port: 30001
  - name: resv-port-1
    port: 30011
  - name: send-port-2
    port: 30002
  - name: resv-port-2
    port: 30012
  - name: send-port-3
    port: 30003
  - name: resv-port-3
    port: 30013
  - name: send-port-4
    port: 30004
  - name: resv-port-4
    port: 30014
  - name: send-port-5
    port: 30005
  - name: resv-port-5
    port: 30015
  selector:
    app: worker-jetson-2

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker-pc
  labels:
    app: worker-pc
spec:
  selector:
    matchLabels:
      app: worker-pc
  template:
    metadata:
      labels:
        app: worker-pc
    spec:
      nodeSelector:
        kubernetes.io/hostname: server-2
      containers:
      - name: worker-pc
        image: yhjh5302/total:latest
        env:
        - name: DEPLOYMENT
          value: "VGG-3 ResNet-CNN_1-10 ResNet-CNN_11_2 ResNet-CNN_12_1 ResNet-CNN_13_2 ResNet-CNN_14_1 ResNet-CNN_15_2 ResNet-CNN_16_1"
        - name: DEVICE_ADDR
          value: "10.96.0.200 10.96.0.201 10.96.0.202 10.96.0.203 10.96.0.204 10.96.0.205"
        - name: SEND_PORT
          value: "30000 30001 30002 30003 30004 30005"
        - name: RESV_PORT
          value: "30010 30011 30012 30013 30014 30015"
        - name: PART_LOCATION
          value:  "2 2 2 2 1 1 5 3 4 5 5 5 5 5 5 5 2"
        - name: RESOURCE
          value: "0.5 0.5"
        - name: SSH_PASSWARD
          value: wnlab7752!
        - name: SCP_ADDRESS
          value: wnlab@192.168.1.13
        - name: SCP_PATH
          value: ./
        - name: DEVICE_IDX
          value: "5"
        - name: WORKER_NAME
          value: pc
        
        #resources:
        #  limits:
        #    nvidia.com/gpu: 1
        #command: ["/bin/bash","-c","python3 TotalModel.py --set_gpu='true' --prev_addr='' --prev_port=30001 --next_addr='10.96.0.202' --next_port=30002 --vram_limit=128 --scheduler_addr=$(SCHEDULER_ADDR) --scheduler_port=$(SCHEDULER_PORT) 1> $(LAYERNAME).txt 2> $(LAYERNAME)_err.txt; sshpass -p $(SSH_PASSWARD) scp -o StrictHostKeyChecking=no $(LAYERNAME)*.txt $(SCP_ADDRESS):$(SCP_PATH);"]
        # command: ["/bin/bash","-c","python3 TotalModel.py --set_gpu='true' --deployed_list $(DEPLOYMENT) --device_index=$(DEVICE_IDX) --device_addr_list $(DEVICE_ADDR) --resv_port_list $(RESV_PORT) --send_port_list $(SEND_PORT) --partition_location $(PART_LOCATION) --p $(RESOURCE) 1> $(WORKER_NAME).txt 2> $(WORKER_NAME)_err.txt; sshpass -p $(SSH_PASSWARD) scp -o StrictHostKeyChecking=no $(WORKER_NAME)*.txt $(SCP_ADDRESS):$(SCP_PATH);"]
        command: ["/bin/bash","-c","while true; do sleep 1000; done"]
        
        ports:
        - containerPort: 30000   # send image
        - containerPort: 30010   # resv image
        - containerPort: 30001   # send image
        - containerPort: 30011   # resv image
        - containerPort: 30002   # send image
        - containerPort: 30012   # resv image
        - containerPort: 30003   # send image
        - containerPort: 30013   # resv image
        - containerPort: 30004   # send image
        - containerPort: 30014   # resv image
        - containerPort: 30005   # send image
        - containerPort: 30015   # resv image

---

apiVersion: v1
kind: Service
metadata:
  name: worker-pc-cluster-ip-service
spec:
  clusterIP: 10.96.0.205
  ports:
  - name: send-port-0
    port: 30000
  - name: resv-port-0
    port: 30010
  - name: send-port-1
    port: 30001
  - name: resv-port-1
    port: 30011
  - name: send-port-2
    port: 30002
  - name: resv-port-2
    port: 30012
  - name: send-port-3
    port: 30003
  - name: resv-port-3
    port: 30013
  - name: send-port-4
    port: 30004
  - name: resv-port-4
    port: 30014
  - name: send-port-5
    port: 30005
  - name: resv-port-5
    port: 30015
  selector:
    app: worker-pc
